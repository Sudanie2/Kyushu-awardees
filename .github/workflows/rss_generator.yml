name: Generate RSS Feed for Kyushu University Research News

on:
  schedule:
    - cron: "10 1 * * *" # UTC 01:10 = JST 10:10
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies (jq)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Install pup (HTML parser)
        run: |
          curl -sL "https://github.com/ericchiang/pup/releases/download/v0.4.0/pup_linux_amd64.zip" -o pup.zip
          unzip pup.zip
          chmod +x pup
          sudo mv pup /usr/local/bin/

      - name: Fetch previous RSS file
        run: |
          if [ -f rss.xml ]; then
            cp rss.xml previous_rss.xml
          else
            echo "Previous RSS file not found. Creating an empty placeholder."
            touch previous_rss.xml
          fi

      - name: Fetch HTML and Convert to RSS
        run: |
          # 九州大学リサーチニュースのHTMLを取得
          curl -sL "https://pr-platform.kyushu-u.ac.jp/research/research-topics/research-news/" -o news.html

          # デバッグ用にHTMLの一部を表示
          head -n 50 news.html

          # RSS ヘッダー作成
          echo '<?xml version="1.0" encoding="UTF-8"?>' > rss.xml
          echo '<rss version="2.0"><channel>' >> rss.xml
          echo '<title>九州大学 リサーチニュース</title>' >> rss.xml
          echo '<link>https://pr-platform.kyushu-u.ac.jp/research/research-topics/research-news/</link>' >> rss.xml
          echo '<description>九州大学の最新研究ニュース</description>' >> rss.xml
          echo '<language>ja</language>' >> rss.xml

          # 記事データを抽出
          pup 'div.c-card c-card--has-hover p-research-topic-card json{}' < news.html | jq -c '.[]' | while read -r item; do
            title=$(echo "$item" | jq -r '.children[] | select(.class == "c-title__main") | .text')
            link=$(echo "$item" | jq -r '.children[] | select(.class == "c-card__over-wrap-link") | .href')
            pubDate=$(echo "$item" | jq -r '.children[] | select(.class == "c-date") | .datetime' | xargs -I {} date --date="{}" -R)

            # URLがnullの場合はスキップ
            if [[ -z "$link" || "$link" == "null" ]]; then
              continue
            fi

            echo "<item>" >> rss.xml
            echo "  <title>${title}</title>" >> rss.xml
            echo "  <link>${link}</link>" >> rss.xml
            echo "  <guid isPermaLink=\"true\">${link}</guid>" >> rss.xml
            echo "  <pubDate>${pubDate}</pubDate>" >> rss.xml
            echo "</item>" >> rss.xml
          done

          echo '</channel></rss>' >> rss.xml

      - name: Debug - Check if RSS file exists
        run: |
          ls -la
          if [ -f rss.xml ]; then
            echo "✅ rss.xml exists!"
          else
            echo "❌ rss.xml NOT FOUND!"
            exit 1
          fi

      - name: Ensure .nojekyll exists
        run: |
          touch .nojekyll
          git add .nojekyll

      - name: Commit and Push RSS
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          git add rss.xml .nojekyll
          git status  # 変更確認

          if git diff --cached --quiet; then
            echo "No changes in rss.xml. Skipping commit."
            exit 0
          fi

          git commit -m "Updated RSS feed"
          git push
